version: "3.8"
services:
  # Orion is the context broker
  orion:
    image: fiware/orion:${ORION_VERSION}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${ORION_PORT}"
    ports:
      - "${ORION_PORT}:${ORION_PORT}" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:${ORION_PORT}/version || exit 1
      interval: 5s

  # IoT-Agent is configured for the JSON Protocol
  iot-agent:
    image: fiware/iotagent-json:latest
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT}"
      - "${IOTA_SOUTH_PORT}"
    ports:
      - "${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}" # localhost:4041
      - "${IOTA_SOUTH_PORT}:${IOTA_SOUTH_PORT}" # localhost:7896
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_DEFAULT_EXPRESSION_LANGUAGE=jexl
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentul # The name of the database used in mongoDB
      - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT} # The port used for device traffic over HTTP
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT}
      - IOTA_DEFAULT_RESOURCE=/iot/json
    healthcheck:
      interval: 5s

  # Database
  mongo-db:
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT}"
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017
    networks:
      - default
    volumes:
      - mongo-db:/data
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s

  # Identity Management
  keyrock:
    labels:
      org.fiware: 'tutorial'
    image: fiware/idm:${KEYROCK_VERSION}
    container_name: fiware-keyrock
    hostname: keyrock
    networks:
      default:
        ipv4_address: 172.18.0.5
    depends_on:
      - mysql-db
    ports:
      - "${KEYROCK_PORT}:${KEYROCK_PORT}" # localhost:3005
      - "${KEYROCK_HTTPS_PORT}:${KEYROCK_HTTPS_PORT}" # localhost:3443
    environment:
      - "DEBUG=idm:*"
      - "IDM_DB_HOST=mysql-db"
      - "IDM_DB_PASS=secret"
      - "IDM_DB_USER=root"
      - "IDM_PORT=${KEYROCK_PORT}"
      - "IDM_HOST=http://localhost:${KEYROCK_PORT}"
      - "IDM_HTTPS_ENABLED=${IDM_HTTPS_ENABLED}"
      - "IDM_HTTPS_PORT=${KEYROCK_HTTPS_PORT}"
      - "IDM_ADMIN_USER=admin"
      - "IDM_ADMIN_EMAIL=admin@test.com"
      - "IDM_ADMIN_PASS=1234"
    secrets:
      - my_secret_data
    healthcheck:
      interval: 5s

  # Database
  mysql-db:
    restart: always
    labels:
      org.fiware: 'tutorial'
    image: mysql:${MYSQL_DB_VERSION}
    hostname: mysql-db
    container_name: db-mysql
    expose:
      - "${MYSQL_DB_PORT}"
    ports:
      - "${MYSQL_DB_PORT}:${MYSQL_DB_PORT}"
    networks:
      default:
        ipv4_address: 172.18.0.6
    environment:
      - "MYSQL_ROOT_PASSWORD=secret"
      - "MYSQL_ROOT_HOST=172.18.0.5" # Allow Keyrock to access this database
    volumes:
      - mysql-db:/var/lib/mysql
    secrets:
      - my_secret_data

  # PEP Proxy
  pep-proxy:
    restart: always
    image: fiware/pep-proxy
    depends_on:
      keyrock:
        condition: service_started
    expose:
      - '80'
      - '1027'
    ports:
      - '1027:1027'
    networks:
      - default
    environment:
      - PEP_PROXY_APP_HOST=orion
      - PEP_PROXY_APP_PORT=${ORION_PORT}
      - PEP_PROXY_PORT=${ORION_PROXY_PORT}
      - PEP_PROXY_IDM_HOST=keyrock
      - PEP_PROXY_IDM_PORT=${KEYROCK_PORT}
      - PEP_PROXY_APP_ID=547e81eb-b450-4ad0-8152-2f9b71a5b4ad
      - PEP_PROXY_USERNAME=pep_proxy_6c9c4540-915f-402d-ac59-6c0ce15b8279
      - PEP_PASSWORD=pep_proxy_e27ce1dc-2efa-408b-8fe9-d6b8ea7541db

networks:
  default:
    ipam:
      config:
        - subnet: 172.18.0.0/24

secrets:
  my_secret_data:
    file: ./secrets.txt

volumes:
  mongo-db: ~
  mysql-db: ~
